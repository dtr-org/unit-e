policy_module(unite, 1.100.1)

########################################
#
# Declarations
#

type unite_t;
type unite_exec_t;
init_daemon_domain(unite_t, unite_exec_t)

permissive unite_t;

type unite_initrc_exec_t;
init_script_file(unite_initrc_exec_t)

type unite_conf_t;
files_type(unite_conf_t)

type unite_var_lib_t;
files_type(unite_var_lib_t)

type unite_var_run_t;
files_type(unite_var_run_t)

type unite_port_t;
corenet_port(unite_port_t)

########################################
#
# unite local policy
#
allow unite_t self:process { fork };

allow unite_t self:fifo_file rw_fifo_file_perms;
allow unite_t self:unix_stream_socket create_stream_socket_perms;

manage_dirs_pattern(unite_t, unite_conf_t, unite_conf_t)
manage_files_pattern(unite_t, unite_conf_t, unite_conf_t)

manage_dirs_pattern(unite_t, unite_var_lib_t, unite_var_lib_t)
manage_files_pattern(unite_t, unite_var_lib_t, unite_var_lib_t)
files_var_lib_filetrans(unite_t, unite_var_lib_t, { dir file })

manage_dirs_pattern(unite_t, unite_var_run_t, unite_var_run_t)
manage_files_pattern(unite_t, unite_var_run_t, unite_var_run_t)

sysnet_dns_name_resolve(unite_t)
corenet_all_recvfrom_unlabeled(unite_t)

allow unite_t self:tcp_socket create_stream_socket_perms;
corenet_tcp_sendrecv_generic_if(unite_t)
corenet_tcp_sendrecv_generic_node(unite_t)
corenet_tcp_sendrecv_all_ports(unite_t)
corenet_tcp_bind_generic_node(unite_t)

gen_require(`
    type unite_port_t;
')
allow unite_t unite_port_t:tcp_socket name_bind;

gen_require(`
    type unite_port_t;
')
allow unite_t unite_port_t:tcp_socket name_connect;

domain_use_interactive_fds(unite_t)

files_read_etc_files(unite_t)

miscfiles_read_localization(unite_t)

sysnet_dns_name_resolve(unite_t)

allow unite_t unite_exec_t:file execute_no_trans;
allow unite_t self:process setsched;
corecmd_exec_ls(unite_t)
corenet_tcp_connect_http_port(unite_t)
dev_read_urand(unite_t)
fs_getattr_xattr_fs(unite_t)
kernel_read_system_state(unite_t)
