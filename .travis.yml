sudo: required
dist: trusty
os: linux
language: minimal
cache:
  directories:
    - depends/built
    - depends/sdk-sources
    - $HOME/.ccache
git:
  depth: false  # full clone for git subtree check, this works around issue #12388
env:
  global:
    - MAKEJOBS=-j3
    - RUN_TESTS=false
    - CHECK_DOC=0
    - BOOST_TEST_RANDOM=1$TRAVIS_BUILD_ID
    - CCACHE_SIZE=100M
    - CCACHE_TEMPDIR=/tmp/.ccache-temp
    - CCACHE_COMPRESS=1
    - BASE_OUTDIR=$TRAVIS_BUILD_DIR/out
    - SDK_URL=https://bitcoincore.org/depends-sources/sdks
    - WINEDEBUG=fixme-all
stages:
  - lint
  - test
before_install:
  - set -o errexit; source .travis/test_03_before_install.sh
install:
  - set -o errexit; source .travis/test_04_install.sh
before_script:
  - set -o errexit; source .travis/test_05_before_script.sh
script:
  - set -o errexit; source .travis/test_06_script.sh
after_script:
  - echo $TRAVIS_COMMIT_RANGE
  - echo $TRAVIS_COMMIT_LOG
jobs:
  include:
    - stage: lint
      env:
      dist: trusty
      os: linux
      sudo: false
      cache: false
      language: python
      python: '3.6'
      addons:
        apt:
          packages:
            - python3-flake8
      before_install:
        - set -o errexit; source .travis/lint_03_before_install.sh
      install:
        - set -o errexit; source .travis/lint_04_install.sh
      before_script:
        - set -o errexit; source .travis/lint_05_before_script.sh
      script:
        - set -o errexit; source .travis/lint_06_script.sh
# ARM
    - stage: test
      env: >-
        HOST=arm-linux-gnueabihf
        PACKAGES="g++-arm-linux-gnueabihf python3-pip"
        DEP_OPTS="NO_QT=1"
        CHECK_DOC=1
        GOAL="install"
        UNITE_CONFIG="--enable-glibc-back-compat --enable-reduce-exports"
# Win32
    - stage: test
      env: >-
        HOST=i686-w64-mingw32
        DPKG_ADD_ARCH="i386"
        DEP_OPTS="NO_QT=1"
        PACKAGES="python3 nsis g++-mingw-w64-i686 wine1.6"
        RUN_TESTS=true
        GOAL="install"
        UNITE_CONFIG="--enable-reduce-exports"
# Qt4 & system libs
    - stage: test
      env: >-
        HOST=x86_64-unknown-linux-gnu
        PACKAGES="python3-zmq qt4-dev-tools libssl-dev libevent-dev bsdmainutils libboost-system-dev libboost-filesystem-dev libboost-chrono-dev libboost-program-options-dev libboost-test-dev libboost-thread-dev libdb5.1++-dev libminiupnpc-dev libzmq3-dev libprotobuf-dev protobuf-compiler libqrencode-dev xvfb"
        NO_DEPENDS=1
        NEED_XVFB=1
        RUN_TESTS=true
        GOAL="install"
        UNITE_CONFIG="--enable-zmq --with-incompatible-bdb --enable-glibc-back-compat --enable-reduce-exports --with-gui=qt4 CPPFLAGS=-DDEBUG_LOCKORDER"
# 32-bit + dash
    - stage: test
      env: >-
        HOST=i686-pc-linux-gnu
        PACKAGES="g++-multilib python3-zmq"
        DEP_OPTS="NO_QT=1"
        RUN_TESTS=true
        GOAL="install"
        UNITE_CONFIG="--enable-zmq --enable-glibc-back-compat --enable-reduce-exports LDFLAGS=-static-libstdc++"
        USE_SHELL="/bin/dash"
# Win64
    - stage: test
      env: >-
        HOST=x86_64-w64-mingw32
        DPKG_ADD_ARCH="i386"
        DEP_OPTS="NO_QT=1"
        PACKAGES="python3 nsis g++-mingw-w64-x86-64 wine1.6"
        RUN_TESTS=true
        GOAL="install"
        UNITE_CONFIG="--enable-reduce-exports"
# x86_64 Linux (uses qt5 dev package instead of depends Qt to speed up build and avoid timeout)
    - stage: test
      env: >-
        HOST=x86_64-unknown-linux-gnu
        PACKAGES="python3-zmq qtbase5-dev qttools5-dev-tools protobuf-compiler libdbus-1-dev libharfbuzz-dev"
        DEP_OPTS="NO_QT=1 NO_UPNP=1 DEBUG=1 ALLOW_HOST_PACKAGES=1"
        RUN_TESTS=true
        GOAL="install"
        UNITE_CONFIG="--enable-zmq --with-gui=qt5 --enable-glibc-back-compat --enable-reduce-exports CPPFLAGS=-DDEBUG_LOCKORDER"
# x86_64 Linux, No wallet
    - stage: test
      env: >-
        HOST=x86_64-unknown-linux-gnu
        PACKAGES="python3"
        DEP_OPTS="NO_WALLET=1"
        RUN_TESTS=true
        GOAL="install"
        UNITE_CONFIG="--enable-glibc-back-compat --enable-reduce-exports"
# Cross-Mac
    - stage: test
      env: >-
        HOST=x86_64-apple-darwin11
        PACKAGES="cmake imagemagick libcap-dev librsvg2-bin libz-dev libbz2-dev libtiff-tools python-dev"
        UNITE_CONFIG="--enable-gui --enable-reduce-exports --enable-werror"
        OSX_SDK=10.11 GOAL="deploy"

